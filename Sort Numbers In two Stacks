public class Solution {
	public void sort(LinkedList<Integer> s1) {
	LinkedList<Integer> s2 = new LinkedList<Integer>();
	if (s1 == null || s1.size() <= 1) {
	return;
}
while (!s1.isEmpty()) {
	int globalMin = Integer.MAX_VALUE;
	int cur = 0;
	int counter = 0;
	while (!s1.isEmpty()) {
		cur = s1.peekFirst();
	if (cur < globalMin) {
	globalMin = cur;
	counter = 1;
} else if (cur == globalMin) {
	counter++;
}
s1.pollFirst();
s2.offerFirst(cur);
 }
while (!s2.isEmpty() && s2.peekFirst() >= globalMin){
	int temp = s2.pollFirst();
if (temp > globalMin) {
	s1.offerFirst(temp);
}	
}
while (counter != 0) {
	s2.offerFirst(globalMin);
	counter--;
}	
}
while (!s2.isEmpty()) {
	s1.offerFirst(s2.pollFirst());
}
}
}
1
