public class Solution {
  public int firstOccur(int[] array, int target) {
    if (array == null || array.length == 0) {
      return -1;
    }
    int left = 0;
    int right = array.length - 1;
    while (left < right - 1) {
      int mid = left + (right - left)/2;
      if (array[mid] == target){
        right = mid; //don't rule out the first occurr
      } else if (array[mid] < target) {
        left = mid + 1;
      } else {
        right = mid -1;
      }
    }
    //post-processing
    if (array[left] == target) {
      return left;
    } else if (array[right] == target) {
      return right;
    } else {
      return -1;
    }
  } 
}


没什么特别注意的，不要死循环不要rule out result就行



public class Solution {
  public int lastOccur(int[] array, int target) {
    if (array == null || array.length == 0) {
      return -1;
    }
    int left = 0;
    int right = array.length - 1;
    while (left < right - 1) {
      int mid = left + (right - left)/2;
      if (array[mid] == target) {
        left = mid;
      } else if (array[mid] > target) {
        right = mid - 1;
      } else {
        left = mid + 1;
      }
    }
    //post-prcessing
    if (array[right] == target) {
      return right;
    } else if (array[left] == target) {
      return left;
    } else {
      return -1;
    }
  }
}


